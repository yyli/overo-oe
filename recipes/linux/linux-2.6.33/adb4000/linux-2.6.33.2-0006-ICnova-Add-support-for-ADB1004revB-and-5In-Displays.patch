From f49b7c1f79472aa88dcfd2ff7d892a29953d0918 Mon Sep 17 00:00:00 2001
From: Benjamin Tietz <benjamin@marvin.local.in-circuit.de>
Date: Wed, 15 Dec 2010 13:56:13 +0100
Subject: [PATCH 06/18] [ICnova] Add support for ADB1004revB and 5In Displays

It is now possible to change between an 5In Display and default
Display in menuconfig, if the board supports it.

The Changes on ADB1004 Revision B are merged now, too.
---
 arch/arm/mach-at91/Kconfig                |   10 +++
 arch/arm/mach-at91/at91sam9g45_devices.c  |    2 +
 arch/arm/mach-at91/board-icnova_adb1000.c |   25 ++++++++
 arch/arm/mach-at91/board-icnova_adb1004.c |   90 ++++++++++++++++++++++++++---
 4 files changed, 119 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-at91/Kconfig b/arch/arm/mach-at91/Kconfig
index bc1221d..3c984e1 100644
--- a/arch/arm/mach-at91/Kconfig
+++ b/arch/arm/mach-at91/Kconfig
@@ -397,6 +397,16 @@ config MACH_ICNOVA_ADB3000
 
 endif
 
+config ICNOVA_ET050000
+	depends on MACH_ICNOVA_ADB1000 || MACH_ICNOVA_ADB1004
+	bool "5Inch Display ET050000DH6"
+	help
+	  Select this if you have a 5" Display connected to your Board.
+
+config ICNOVA_ADB1004B
+	depends on MACH_ICNOVA_ADB1004
+	bool "ADB1004 is Revision B"
+
 # ----------------------------------------------------------
 
 if ARCH_AT91CAP9
diff --git a/arch/arm/mach-at91/at91sam9g45_devices.c b/arch/arm/mach-at91/at91sam9g45_devices.c
index c40e4cd..0f9955f 100644
--- a/arch/arm/mach-at91/at91sam9g45_devices.c
+++ b/arch/arm/mach-at91/at91sam9g45_devices.c
@@ -918,9 +918,11 @@ void __init at91_add_device_lcdc(struct atmel_lcdfb_info *data)
 	at91_set_A_periph(AT91_PIN_PE5, 0);	/* LCDDOTCK */
 #ifndef CONFIG_MACH_ICNOVA_ADB1004
 #ifndef CONFIG_MACH_ICNOVA_ADB3000
+#ifndef CONFIG_ICNOVA_ET050000
 	at91_set_A_periph(AT91_PIN_PE6, 0);	/* LCDDEN */
 #endif
 #endif
+#endif
 	at91_set_A_periph(AT91_PIN_PE7, 0);	/* LCDD0 */
 	at91_set_A_periph(AT91_PIN_PE8, 0);	/* LCDD1 */
 	at91_set_A_periph(AT91_PIN_PE9, 0);	/* LCDD2 */
diff --git a/arch/arm/mach-at91/board-icnova_adb1000.c b/arch/arm/mach-at91/board-icnova_adb1000.c
index d07a5c2..b292acf 100644
--- a/arch/arm/mach-at91/board-icnova_adb1000.c
+++ b/arch/arm/mach-at91/board-icnova_adb1000.c
@@ -206,6 +206,20 @@ static struct mci_platform_data __initdata ek_mmc_data = {
  */
 #if defined(CONFIG_FB_ATMEL) || defined(CONFIG_FB_ATMEL_MODULE)
 static struct fb_videomode at91_tft_vga_modes[] = {
+#ifdef CONFIG_ICNOVA_ET050000
+	{
+		.name           = "VGA",
+		.refresh	= 50,
+		.xres		= 800,		.yres		= 480,
+		.pixclock	= KHZ2PICOS(33260),
+
+		.left_margin	= 178,		.right_margin	= 38,
+		.upper_margin	= 35,		.lower_margin	= 8,
+		.hsync_len	= 40,		.vsync_len	= 2,
+
+		.vmode		= FB_VMODE_NONINTERLACED,
+	}
+#else
 	{
 		.name           = "QVGA",
 		.refresh	= 50,
@@ -219,11 +233,16 @@ static struct fb_videomode at91_tft_vga_modes[] = {
 		.sync		= FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
 		.vmode		= FB_VMODE_NONINTERLACED,
 	},
+#endif
 };
 
 static struct fb_monspecs at91fb_default_monspecs = {
 	.manufacturer	= "ET",
+#ifdef CONFIG_ICNOVA_ET050000
+	.monitor	= "ET050000DH6",
+#else
 	.monitor        = "ET035009DH6",
+#endif
 
 	.modedb		= at91_tft_vga_modes,
 	.modedb_len	= ARRAY_SIZE(at91_tft_vga_modes),
@@ -309,7 +328,13 @@ static void __init ek_board_init(void)
 	gpio_request(AT91_PIN_PE1, "lcdc.mode");
 	gpio_direction_output(AT91_PIN_PE1, 1);
 	gpio_request(AT91_PIN_PE0, "lcdc.pwr");
+#ifdef CONFIG_ICNOVA_ET050000
+	gpio_direction_output(AT91_PIN_PE0, 1);
+	gpio_request(AT91_PIN_PE1, "lcdc.enb");
+	gpio_direction_output(AT91_PIN_PE6, 1);
+#else
 	gpio_direction_output(AT91_PIN_PE0, 0);
+#endif
 
 	at91_add_device_lcdc(&ek_lcdc_data);
 	/* LEDs */
diff --git a/arch/arm/mach-at91/board-icnova_adb1004.c b/arch/arm/mach-at91/board-icnova_adb1004.c
index 60934db..ffb4eba 100644
--- a/arch/arm/mach-at91/board-icnova_adb1004.c
+++ b/arch/arm/mach-at91/board-icnova_adb1004.c
@@ -19,6 +19,9 @@
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/spi/spi.h>
+#ifdef CONFIG_ICNOVA_ADB1004B
+#include <linux/spi/ads7846.h>
+#endif
 #include <linux/fb.h>
 #include <linux/gpio_keys.h>
 #include <linux/input.h>
@@ -54,9 +57,11 @@ static void __init ek_map_io(void)
 	/* DGBU on ttyS0. (Rx & Tx only) */
 	at91_register_uart(0, 0, 0);
 
+	// For RS485 you might enable ATMEL_UART_RTS instead of 0
 	at91_register_uart(AT91SAM9G45_ID_US0, 1, 0);
 	at91_register_uart(AT91SAM9G45_ID_US1, 2, 0);
 	at91_register_uart(AT91SAM9G45_ID_US2, 3, 0);
+	//at91_register_uart(AT91SAM9G45_ID_US3, 4, 0);
 
 	/* set serial console to ttyS0 (ie, DBGU) */
 	at91_set_serial_console(0);
@@ -90,7 +95,40 @@ static struct i2c_board_info icnova_i2c[] = {
  * SPI devices.
  */
 
+#ifdef CONFIG_ICNOVA_ADB1004B
+#define CONFIG_BOARD_ICNOVA_ADS7846_IRQ	AT91_PIN_PB17
+#define CONFIG_BOARD_ICNOVA_ADS7846_CS	2
+static struct ads7846_platform_data ads_info = {
+	.model                  = 7846,
+	.vref_delay_usecs       = 100,
+	.gpio_pendown           = CONFIG_BOARD_ICNOVA_ADS7846_IRQ,
+	.x_min                  = 330,
+	.y_min                  = 3700,
+	.x_max                  = 3700,
+	.y_max                  = 330,
+	.settle_delay_usecs     = 50,
+};
+#endif
+
 static struct spi_board_info ek_spi_devices[] = {
+#ifdef CONFIG_ICNOVA_ADB1004B
+	{
+		.modalias       = "ads7846",
+		.max_speed_hz   = 125000 * 26,
+		.chip_select    = CONFIG_BOARD_ICNOVA_ADS7846_CS,
+		.platform_data  = &ads_info,
+		.bus_num        = 0,
+		.controller_data = (void *) AT91_PIN_PD25,
+	},
+#endif
+};
+
+
+/*
+ * MACB Ethernet device
+ */
+static struct at91_eth_data __initdata ek_macb_data = {
+	.phy_irq_pin	= AT91_PIN_PC6,
 };
 
 
@@ -159,6 +197,9 @@ static struct mci_platform_data __initdata ek_mmc_data = {
 	.slot[0] = {
 		.bus_width	= 4,
 		.detect_pin	= AT91_PIN_PD29,
+#ifdef CONFIG_ICNOVA_ADB1004B
+		.wp_pin		= AT91_PIN_PD5,
+#endif
 	}
 };
 
@@ -168,6 +209,20 @@ static struct mci_platform_data __initdata ek_mmc_data = {
  */
 #if defined(CONFIG_FB_ATMEL) || defined(CONFIG_FB_ATMEL_MODULE)
 static struct fb_videomode at91_tft_vga_modes[] = {
+#ifdef CONFIG_ICNOVA_ET050000
+	{
+		.name           = "VGA",
+		.refresh	= 50,
+		.xres		= 800,		.yres		= 480,
+		.pixclock	= KHZ2PICOS(33260),
+
+		.left_margin	= 178,		.right_margin	= 38,
+		.upper_margin	= 35,		.lower_margin	= 8,
+		.hsync_len	= 40,		.vsync_len	= 2,
+
+		.vmode		= FB_VMODE_NONINTERLACED,
+	},
+#else
 	{
 		.name           = "QVGA",
 		.refresh	= 50,
@@ -181,11 +236,16 @@ static struct fb_videomode at91_tft_vga_modes[] = {
 		.sync		= FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
 		.vmode		= FB_VMODE_NONINTERLACED,
 	},
+#endif
 };
 
 static struct fb_monspecs at91fb_default_monspecs = {
 	.manufacturer	= "ET",
+#ifdef CONFIG_ICNOVA_ET050000
+	.monitor        = "ET050000DH6",
+#else
 	.monitor        = "ET035009DH6",
+#endif
 
 	.modedb		= at91_tft_vga_modes,
 	.modedb_len	= ARRAY_SIZE(at91_tft_vga_modes),
@@ -219,12 +279,13 @@ static struct atmel_lcdfb_info __initdata ek_lcdc_data;
 /*
  * Touchscreen
  */
+#ifndef CONFIG_ICNOVA_ADB1004B
 static struct at91_tsadcc_data ek_tsadcc_data = {
-	.adc_clock		= 300000,
-	.pendet_debounce	= 0x0d,
-	.ts_sample_hold_time	= 0x0a,
+	.adc_clock		= 200000,
+	.pendet_debounce	= 0x02,
+	.ts_sample_hold_time	= 0x0f,
 };
-
+#endif
 
 static void __init ek_board_init(void)
 {
@@ -236,26 +297,39 @@ static void __init ek_board_init(void)
 	/* USB HS Device */
 	at91_add_device_usba(NULL);
 	/* SPI */
+#ifdef CONFIG_ICNOVA_ADB1004B
+	ek_spi_devices[0].irq = gpio_to_irq(CONFIG_BOARD_ICNOVA_ADS7846_IRQ),
+#endif
 	at91_add_device_spi(ek_spi_devices, ARRAY_SIZE(ek_spi_devices));
 	/* MMC */
 	at91_add_device_mci(0, &ek_mmc_data);
+	/* Ethernet */
+	at91_add_device_eth(&ek_macb_data);
 	/* NAND */
 	ek_add_device_nand();
 	/* I2C */
 	at91_add_device_i2c(0, icnova_i2c, ARRAY_SIZE(icnova_i2c));
 	/* LCD Controller */
+	gpio_request(AT91_PIN_PE0, "lcdc.pwr");
+#ifdef CONFIG_ICNOVA_ET050000
+	gpio_direction_output(AT91_PIN_PE0, 1);
+	gpio_request(AT91_PIN_PE6, "lcdc.enb");
+	gpio_direction_output(AT91_PIN_PE6, 1);
+#else
+	gpio_direction_output(AT91_PIN_PE0, 0);
 	gpio_request(AT91_PIN_PB10, "lcdc.ud");
 	gpio_direction_output(AT91_PIN_PB10, 0);
 	gpio_request(AT91_PIN_PB11, "lcdc.lr");
 	gpio_direction_output(AT91_PIN_PB11, 0);
-	gpio_request(AT91_PIN_PE0, "lcdc.mode");
-	gpio_direction_output(AT91_PIN_PE0, 1);
-	gpio_request(AT91_PIN_PE1, "lcdc.pwr");
-	gpio_direction_output(AT91_PIN_PE1, 0);
+#endif
+	gpio_request(AT91_PIN_PE1, "lcdc.mode");
+	gpio_direction_output(AT91_PIN_PE1, 1);
 
 	at91_add_device_lcdc(&ek_lcdc_data);
+#ifndef CONFIG_ICNOVA_ADB1004B
 	/* Touch Screen */
 	at91_add_device_tsadcc(&ek_tsadcc_data);
+#endif
 }
 
 MACHINE_START(AT91SAM9G45EKES, "In-Circuit ICnova G45")
-- 
1.7.3.3

